/*! DirtyForm v0.4.0 | MIT License */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).DirtyForm=t()}(this,(function(){"use strict";function e(e,t=100){let i;return(...a)=>{clearTimeout(i),i=setTimeout((()=>{e.apply(this,a)}),t)}}return class{static trackedTags=["INPUT","SELECT","TEXTAREA","TRIX-EDITOR"];constructor(e,t={}){this.form=e,this.isDirty=!1,this.initialValues={},this.onDirty=t.onDirty,this.beforeLeave=t.beforeLeave,this.message=t.message||"You have unsaved changes!",this.setupFieldsTracking(),t.skipLeavingTracking||this.setLeavingHandler()}disconnect(){this.removeFieldsTracking(),this.removeLeavingHandler()}setupFieldsTracking(){this.fields.forEach((t=>{switch(this.initialValues[t.name]=t.value,t.tagName){case"TRIX-EDITOR":t.addEventListener("trix-change",e(this.valueChanged));break;case"SELECT":t.addEventListener("change",e(this.valueChanged));break;default:t.addEventListener("change",e(this.valueChanged)),t.addEventListener("input",e(this.valueChanged))}}))}removeFieldsTracking(){this.fields.forEach((e=>{switch(e.tagName){case"TRIX-EDITOR":e.removeEventListener("trix-change",this.valueChanged);break;case"SELECT":e.removeEventListener("change",this.valueChanged);break;default:e.removeEventListener("change",this.valueChanged),e.removeEventListener("input",this.valueChanged)}}))}setLeavingHandler(){window.addEventListener("beforeunload",this.beforeUnload),"undefined"!=typeof Turbo&&document.addEventListener("turbo:before-visit",this.onLeave)}removeLeavingHandler(){window.removeEventListener("beforeunload",this.beforeUnload),"undefined"!=typeof Turbo&&document.removeEventListener("turbo:before-visit",this.onLeave)}get fields(){const e=this.constructor.trackedTags.map((e=>`${e}[name]`)).join(",");return Array.from(this.form.querySelectorAll(e)).filter((e=>"false"!=e.getAttribute("data-dirty-form")))}markAsDirty(){this.isDirty=!0,this.onDirty&&this.onDirty()}valueChanged=e=>{const t=e.target;this.initialValues[t.name]!=t.value&&this.markAsDirty()};beforeUnload=e=>{this.isDirty&&(e.preventDefault(),e.returnValue=this.message)};onLeave=e=>{this.isDirty?confirm(this.message)?this.beforeLeave&&this.beforeLeave():e.preventDefault():this.isDirty=!1}}}));
